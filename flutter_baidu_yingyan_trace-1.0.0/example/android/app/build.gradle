def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// 添加签名信息
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// end

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.baidu.flutter.traceexample"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

//    signingConfigs {
//        release {
//            //keystore中key的别名
//            keyAlias 'zongjicha'
//            //keystore中key的密码
//            keyPassword 'zongjicha123456'
//            //keystore的文件路径，可以是绝对路径也可以是相对路径
//            storeFile file('../zongjicha-zongjicha123456.keystore')
//            //keystore的密码l
//            storePassword 'zongjicha123456'
//        }
//    }
//
//    buildTypes {
//        debug {
//            ndk{
//                //这里其实我觉可以直接是用"armeabi-v7a"，但国内几个大哥之前使用的都是"armeabi"
//                abiFilters "armeabi", "armeabi-v7a","arm64-v8a", "x86", "arm64"
//            }
//            signingConfig signingConfigs.debug
//        }
//        release {
//            ndk{
//                //这里其实我觉可以直接是用"armeabi-v7a"，但国内几个大哥之前使用的都是"armeabi"
//                abiFilters "armeabi-v7a"
////                abiFilters "x86_64"
////                abiFilters "arm64-v8a", "armeabi-v7a"
//                // abiFilters "armeabi", "armeabi-v7a","arm64-v8a", "x86", "arm64"
//            }
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//            //关闭混淆, 否则在运行release包后可能出现运行崩溃， TODO后续进行混淆配置
//            minifyEnabled false //删除无用代码
//            shrinkResources false //删除无用资源
//        }
//    }

    // 添加签名信息
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    // end

    buildTypes {
        debug {
            ndk {
                abiFilters "armeabi", "armeabi-v7a","arm64-v8a", "x86", "arm64"
            }
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            ndk {
                abiFilters "armeabi", "armeabi-v7a"
            }
            shrinkResources false //删除无用资源
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}
